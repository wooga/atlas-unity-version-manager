/*
 * Copyright 2018 Wooga GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'net.wooga.plugins' version '2.1.1'
}

group 'net.wooga.gradle'
description = "a unity version manager"

pluginBundle {
    website = 'https://wooga.github.io/atlas-unity/'
    vcsUrl = 'https://github.com/wooga/atlas-unity'
    tags = ['Unity3D']

    plugins {
        unityVersionManager {
            id = 'net.wooga.unity-version-manager'
            displayName = 'Gradle Unity version manager'
            description = 'This plugin provides tasks to manage and downloads unity versions'
        }
    }
}

github {
    repositoryName = "wooga/atlas-unity-version-manager"
}

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

dependencies {
    implementation 'net.wooga:unity-version-manager-jni:1.4.0'
    implementation "gradle.plugin.net.wooga.gradle:atlas-unity:(2,3]"
    implementation "com.wooga.gradle:gradle-commons:0.1.0"
    testImplementation 'net.wooga.test:unity-project-generator-rule:0.3.0'
    testImplementation "com.wooga.spock.extensions:spock-unity-version-manager-extension:0.2.0"
}

configurations.all {
    resolutionStrategy {
        force 'org.codehaus.groovy:groovy-all:2.5.12'
        force 'org.codehaus.groovy:groovy-macro:2.5.12'
        force 'org.codehaus.groovy:groovy-nio:2.5.12'
        force 'org.codehaus.groovy:groovy-sql:2.5.12'
        force 'org.codehaus.groovy:groovy-xml:2.5.12'
    }
}

integrationTest {
    testLogging.showStandardStreams = true
}
